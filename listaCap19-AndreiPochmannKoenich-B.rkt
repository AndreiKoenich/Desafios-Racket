#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 77 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 36 36 140
255 255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 34 139 34
255 255 255 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 4026 0 4 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(5
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 282
(6
 #"#reader(lib \"htdp-intermediate-reader.ss\" \"lang\")((modname lista"
 #"Cap19-AndreiPochmannKoenich-B) (read-case-sensitive #t) (teachpacks "
 #"((lib \"image.rkt\" \"teachpack\" \"2htdp\"))) (htdp-settings #(#t c"
 #"onstructor repeating-decimal #f #t none #f ((lib \"image.rkt\" \"tea"
 #"chpack\" \"2htdp\")) #f)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 31 #";; ============================"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; DEFINI\303\207\303\225ES DE TIPOS DE DADOS"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; ============================"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; TIPO RETANGULO:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 9 #"retangulo"
0 0 24 3 2 #" ("
0 0 14 3 5 #"lado1"
0 0 24 3 1 #" "
0 0 14 3 5 #"lado2"
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 1 #" "
0 0 14 3 4 #"nome"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; Um elemento de Retangulo tem o formato"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; (make-retangulo lado1 lado2 c n), onde"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46
#";; lado1: N\303\272mero, \303\251 a largura do ret\303\242ngulo;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45
#";; lado2: N\303\272mero, \303\251 a altura do ret\303\242ngulo;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; cor : String, \303\251 a cor do ret\303\242ngulo;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; nome : String, \303\251 o nome do ret\303\242ngulo."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"R1"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-retangulo"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"R1\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"R2"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-retangulo"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"R2\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; TIPO TRIANGULO:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 9 #"triangulo"
0 0 24 3 2 #" ("
0 0 14 3 4 #"lado"
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 1 #" "
0 0 14 3 4 #"nome"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; Um elemento de Triangulo tem o formato"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; (make-triangulo lado cor nome), onde"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42
#";; lado: N\303\272mero, \303\251 o lado do tri\303\242ngulo;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; cor: String, \303\251 a cor do tri\303\242ngulo;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; nome: String, \303\251 o nome do tri\303\242ngulo."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-triangulo"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"T1\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"T2"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-triangulo"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"T2\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; TIPO ELIPSE:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"elipse"
0 0 24 3 2 #" ("
0 0 14 3 7 #"largura"
0 0 24 3 1 #" "
0 0 14 3 6 #"altura"
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 1 #" "
0 0 14 3 4 #"nome"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Um elemento de Elipse tem o formato"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; (make-elipse largura altura cor nome), onde"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; largura: N\303\272mero, \303\251 a largura da elipse;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; altura: N\303\272mero, \303\251 a altura da elipse;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; cor : String, \303\251 a cor da elipse;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; nome : String, \303\251 o nome da elipse."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"E1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-elipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"E1\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"E2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-elipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"E2\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; Uma Forma pode ser"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 22 #";; 1. um Retangulo, ou"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 22 #";; 2. um Triangulo, ou"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 16 #";; 3. uma Elipse"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; Uma ListaFormas \303\251"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 23 #";; 1. vazia (empty), ou"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 23 #";; 2. (cons f lf), onde"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 12 #";; f : Forma"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 18 #";; lf: ListaFormas"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"L0"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"E1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"E1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"E2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"T2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"R1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"R2"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"L3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"T2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"R1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"R1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"L4"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"E2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"E2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"E2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"T2"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; desenha : Forma -> Imagem"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Dada uma forma, gera uma imagem desta forma."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; (desenha E1) = "
0 6           4 17 89
(7
 #"(#(struct:translate 15 25 #(struct:ellipse 30 50 0 255 \"pink\")) #("
 #"struct:bb 30 50 50) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #";; (desenha T2) = "
0 6           4 17 271
(8
 #"(#(struct:translate -0.0 34.64101615137755 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(st"
 #"ruct:pulled-point 0 0 20.000000000000007 -34.64101615137755 0 0)) 25"
 #"5 \"red\")) #(struct:bb 40.0 34.64101615137755 34.64101615137755) #f"
 #")"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desenha"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 3 #" [("
0 0 14 3 10 #"retangulo?"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 15 #"retangulo-lado1"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 15 #"retangulo-lado2"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 13 #"retangulo-cor"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #" [("
0 0 14 3 10 #"triangulo?"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 8 #"triangle"
0 0 24 3 2 #" ("
0 0 14 3 14 #"triangulo-lado"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #"("
0 0 14 3 13 #"triangulo-cor"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #" [("
0 0 14 3 7 #"elipse?"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ellipse"
0 0 24 3 2 #" ("
0 0 14 3 14 #"elipse-largura"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 13 #"elipse-altura"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"elipse-cor"
0 0 24 29 1 #"\n"
0 0 14 3 1 #"f"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desenha"
0 0 24 3 1 #" "
0 0 14 3 2 #"E1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desenha"
0 0 24 3 1 #" "
0 0 14 3 2 #"T2"
0 0 24 3 3 #") ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 328
(9
 #";;------------------------------------------------------------------"
 #"----------------------------------EXERC\303\215CIO 01---------------"
 #"--------------------------------------------------------------------"
 #"--------------------------------------------------------------------"
 #"--------------------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 296
(10
 #";; LISTA DE STRINGS ================================================"
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"========================"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; Um elemento listastring do conjunto ListaString pode ser"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; 1. A lista vazia empty"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";; ou"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; 2. (cons s lds), em que:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; s: String"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; lds: ListaString"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; Exemplos de elementos do conjunto ListaString:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"lista-strings-vazia"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"lista-strings-1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Morphy\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Steinitz\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Zukertort\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"lista-strings-2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Karpov\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Alekhine\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Botvinnik\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"lista-strings-3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Carlsen\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Kasparov\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Kamsky\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 293
(11
 #";; LISTA-ELIPSES ==================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"====================="
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; lista-elipses: ListaFormas -> ListaFormas"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 67
(12
 #";; Objetivo: esta fun\303\247\303\243o recebe uma lista de formas e "
 #"retorna uma"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(13
 #";; lista com todas as elipses da lista fornecida. Caso a fun\303\247"
 #"\303\243o receba"
) 0 0 24 29 1 #"\n"
0 0 17 3 70
(14
 #";; uma lista de formas vazia, a fun\303\247\303\243o retorna uma lis"
 #"ta vazia. Caso"
) 0 0 24 29 1 #"\n"
0 0 17 3 67
(15
 #";; a lista fornecida n\303\243o possua nenhuma elipse, a fun\303\247"
 #"\303\243o retorna"
) 0 0 24 29 1 #"\n"
0 0 17 3 19 #";; uma lista vazia."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Exemplos: (lista-elipses L0) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;           (lista-elipses L1) = (cons E1 empty)"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;           (lista-elipses L2) = (cons E1 (cons E2 empty))"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;           (lista-elipses L3) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";;           (lista-elipses L4) = (cons E2(cons E2(cons E2 empty)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lista-elipses"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 7 #"elipse?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lista-elipses"
0 0 24 3 1 #" "
0 0 14 3 2 #"L0"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lista-elipses"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"E1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lista-elipses"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"E1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"E2"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lista-elipses"
0 0 24 3 1 #" "
0 0 14 3 2 #"L3"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lista-elipses"
0 0 24 3 1 #" "
0 0 14 3 2 #"L4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"E2"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"E2"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"E2"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 299
(16
 #";; LISTA-NOMES-ELIPSES ============================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"==========================="
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; lista-nomes-elipses: ListaFormas -> ListaString"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 64
(17
 #";; Objetivo: esta fun\303\247\303\243o recebe uma lista de formas, e"
 #" retorna"
) 0 0 24 29 1 #"\n"
0 0 17 3 62
#";; uma lista contendo os nomes de todas as elipses da lista de"
0 0 24 29 1 #"\n"
0 0 17 3 63
(18
 #";; formas fornecida. Caso a fun\303\247\303\243o receba uma lista de"
 #" formas"
) 0 0 24 29 1 #"\n"
0 0 17 3 68
(19
 #";; vazia, a fun\303\247\303\243o retorna uma lista vazia. Caso a lis"
 #"ta fornecida"
) 0 0 24 29 1 #"\n"
0 0 17 3 66
(20
 #";; n\303\243o possua nenhuma elipse, a fun\303\247\303\243o retorna "
 #"uma lista vazia."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; Exemplos: (lista-nomes-elipses L0) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 57
#";;           (lista-nomes-elipses L1) = (cons \"E1\" empty)"
0 0 24 29 1 #"\n"
0 0 17 3 68
(21
 #";;           (lista-nomes-elipses L2) = (cons \"E1\"(cons \"E2\" emp"
 #"ty))"
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";;           (lista-nomes-elipses L3) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";;           (lista-nomes-elipses L4) = (cons \""
0 0 17 3 2 #"E2"
0 0 17 3 30 #"\"(cons \"E2\"(cons \"E2\" empty)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"lista-nomes-elipses"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 11 #"elipse-nome"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lista-elipses"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"lista-nomes-elipses"
0 0 24 3 1 #" "
0 0 14 3 2 #"L0"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"lista-nomes-elipses"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"E1\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"lista-nomes-elipses"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"E1\""
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"E2\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"lista-nomes-elipses"
0 0 24 3 1 #" "
0 0 14 3 2 #"L3"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"lista-nomes-elipses"
0 0 24 3 1 #" "
0 0 14 3 2 #"L4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"E2\""
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"E2\""
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"E2\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 297
(22
 #";; LISTA-ELIPSES-IMG ==============================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"========================="
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; lista-elipses-img: ListaFormas -> Imagem"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(23
 #";; Objetivo: esta fun\303\247\303\243o recebe uma lista de formas, e"
 #" retorna uma imagem"
) 0 0 24 29 1 #"\n"
0 0 17 3 11 #";; contendo"
0 0 17 3 1 #" "
0 0 17 3 5 #"todas"
0 0 17 3 64
#" as elipses da lista original, na ordem inversa em que aparecem."
0 0 24 29 1 #"\n"
0 0 17 3 89
(24
 #";; Caso a fun\303\247\303\243o receba uma lista de formas vazia, a f"
 #"un\303\247\303\243o retorna uma imagem vazia."
) 0 0 24 29 1 #"\n"
0 0 17 3 7 #";; Caso"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 5 #"lista"
0 0 17 3 75
(25
 #" fornecida n\303\243o possua nenhuma elipse, a fun\303\247\303\243o "
 #"retorna uma imagem vazia."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; Exemplos: (lista-elipses-img L0) = empty-image"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;           (lista-elipses-img L1) = "
0 6           4 17 89 7 0 0 24 29 1 #"\n"
0 0 17 3 38 #";;           (lista-elipses-img L2) = "
0 6           4 17 482
(26
 #"(#(struct:overlay #(struct:translate 0 15 #(struct:overlay #(struct:"
 #"translate 0 10 #(struct:translate 0 0 #(struct:polygon (#(struct:pul"
 #"led-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0)) 255 \"b"
 #"lack\"))) #(struct:translate 0 0 #(struct:translate 20 10 #(struct:e"
 #"llipse 40 20 0 255 \"red\"))))) #(struct:translate 40 0 #(struct:tra"
 #"nslate 15 25 #(struct:ellipse 30 50 0 255 \"pink\")))) #(struct:bb 7"
 #"0 50 50) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 50 #";;           (lista-elipses-img L3) = empty-image "
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;           (lista-elipses-img L4) = "
0 6           4 17 610
(27
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 10 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 0 0 0 0)) 255 \"black\"))) #(struct:translate "
 #"0 0 #(struct:translate 20 10 #(struct:ellipse 40 20 0 255 \"red\")))"
 #")) #(struct:translate 40 0 #(struct:translate 20 10 #(struct:ellipse"
 #" 40 20 0 255 \"red\"))))) #(struct:translate 80 0 #(struct:translate"
 #" 20 10 #(struct:ellipse 40 20 0 255 \"red\")))) #(struct:bb 120 20 2"
 #"0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lista-elipses-img"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 20 #"desenha-lista-formas"
0 0 24 3 2 #" ("
0 0 14 3 5 #"foldl"
0 0 24 3 1 #" "
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lista-elipses"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lista-elipses-img"
0 0 24 3 1 #" "
0 0 14 3 2 #"L0"
0 0 24 3 2 #") "
0 0 14 3 11 #"empty-image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lista-elipses-img"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lista-elipses-img"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lista-elipses-img"
0 0 24 3 1 #" "
0 0 14 3 2 #"L3"
0 0 24 3 2 #") "
0 0 14 3 11 #"empty-image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lista-elipses-img"
0 0 24 3 1 #" "
0 0 14 3 2 #"L4"
0 0 24 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 17 3 301
(28
 #";; SOMA-LADOS-TRIANGULOS ==========================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"============================="
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; soma-lados-triangulos: ListaFormas -> N\303\272mero"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 64 17 0 0 24 29 1 #"\n"
0 0 17 3 64
(29
 #";; e retorna o valor da soma dos lados dos tri\303\242ngulos da list"
 #"a."
) 0 0 24 29 1 #"\n"
0 0 17 3 66
(30
 #";; Caso n\303\243o exista nenhum tri\303\242ngulo na lista de formas"
 #" recebida,"
) 0 0 24 29 1 #"\n"
0 0 17 3 66
(31
 #";; a fun\303\247\303\243o retorna val"
 #"or zero. Caso a fun\303\247\303\243o receba uma lista"
) 0 0 24 29 1 #"\n"
0 0 17 3 50
#";; de formas vazia, a fun\303\247\303\243o retorna valor zero."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; Exemplos: (soma-lados-triangulos L0) = 0"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;           (soma-lados-triangulos L1) = 0"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;           (soma-lados-triangulos L2) = 70"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;           (soma-lados-triangulos L3) = 130"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;           (soma-lados-triangulos L4) = 40"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"soma-lados-triangulos"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 5 #"foldl"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 14 #"triangulo-lado"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 10 #"triangulo?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"soma-lados-triangulos"
0 0 24 3 1 #" "
0 0 14 3 2 #"L0"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"soma-lados-triangulos"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"soma-lados-triangulos"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 2 #") "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"soma-lados-triangulos"
0 0 24 3 1 #" "
0 0 14 3 2 #"L3"
0 0 24 3 2 #") "
0 0 21 3 3 #"130"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"soma-lados-triangulos"
0 0 24 3 1 #" "
0 0 14 3 2 #"L4"
0 0 24 3 2 #") "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 17 3 300
(32
 #";; DESENHA-LISTA-FORMAS ============================================"
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"============================"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; desenha-lista-formas: ListaFormas -> Imagem"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 68
(33
 #";; Objetivo: esta fun\303\247\303\243o recebe uma lista de formas, e"
 #" retorna uma"
) 0 0 24 29 1 #"\n"
0 0 17 3 69
(34
 #";; imagem com todas as forma"
 #"s lado a lado. Caso a fun\303\247\303\243o receba uma"
) 0 0 24 29 1 #"\n"
0 0 17 3 62
(35
 #";; lista de formas vazia, a fun\303\247\303\243o retorna uma imagem "
 #"vazia."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; Exemplos: (desenha-lista-formas L0) = empty-image"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;           (desenha-lista-formas L1) = "
0 6           4 17 89 7 0 0 24 29 1 #"\n"
0 0 17 3 41 #";;           (desenha-lista-formas L2) = "
0 6           4 17 1628
(36
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 5.0 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 25 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 0 0 0 0)) 255 \"black\"))) #(struct:translate 0 0 #(struct:t"
 #"ranslate 15 25 #(struct:ellipse 30 50 0 255 \"pink\"))))) #(struct:t"
 #"ranslate 30 15 #(struct:translate 20 10 #(struct:ellipse 40 20 0 255"
 #" \"red\"))))) #(struct:translate 70 12.00961894323342 #(struct:trans"
 #"late -0.0 25.98076211353316 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 15.000000000000007 -25.98076211353316 0 0)) 255 \"blue\")))))"
 #" #(struct:translate 100.0 7.679491924311225 #(struct:translate -0.0 "
 #"34.64101615137755 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 20."
 #"000000000000007 -34.64101615137755 0 0)) 255 \"red\"))))) #(struct:t"
 #"ranslate 140.0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struc"
 #"t:pulled-point 0 0 30 60 0 0) #(struct:pulled-point 0 0 0 60 0 0)) 2"
 #"55 \"red\"))))) #(struct:translate 170.0 10.0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:"
 #"pulled-point 0 0 0 40 0 0)) 255 \"green\")))) #(struct:bb 210.0 60.0"
 #" 60.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 41 #";;           (desenha-lista-formas L3) = "
0 6           4 17 1949
(37
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 12.679491924311225 #(struct:overlay #(struct:translate 0 "
 #"4.3301270189221945 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 12.99038105676658 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0)) 255"
 #" \"black\"))) #(struct:translate 0 0 #(struct:translate -0.0 25.9807"
 #"6211353316 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 15.0000000"
 #"00000007 -25.98076211353316 0 0)) 255 \"blue\"))))) #(struct:transla"
 #"te 30.0 0.0 #(struct:translate -0.0 25.98076211353316 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 "
 #"0 0 0) #(struct:pulled-point 0 0 15.000000000000007 -25.980762113533"
 #"16 0 0)) 255 \"blue\"))))) #(struct:translate 60.0 0.0 #(struct:tran"
 #"slate -0.0 25.98076211353316 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-po"
 #"int 0 0 15.000000000000007 -25.98076211353316 0 0)) 255 \"blue\"))))"
 #") #(struct:translate 90.0 0 #(struct:translate -0.0 34.6410161513775"
 #"5 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 20.000000000000007 "
 #"-34.64101615137755 0 0)) 255 \"red\"))))) #(struct:translate 130.0 0"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0"
 #" 0 30 60 0 0) #(struct:pulled-point 0 0 0 60 0 0)) 255 \"red\"))))) "
 #"#(struct:translate 160.0 0.0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 "
 #"0 0) #(struct:pulled-point 0 0 30 60 0 0) #(struct:pulled-point 0 0 "
 #"0 60 0 0)) 255 \"red\")))) #(struct:bb 190.0 60.0 60.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 41 #";;           (desenha-lista-formas L4) = "
0 6           4 17 939
(38
 #"(#(struct:overlay #(struct:translate 0 7.320508075688775 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 10 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 0 0 0 0)) 255 \"black\"))) #(struct:translate 0 0 #(struct"
 #":translate 20 10 #(struct:ellipse 40 20 0 255 \"red\"))))) #(struct:"
 #"translate 40 0 #(struct:translate 20 10 #(struct:ellipse 40 20 0 255"
 #" \"red\"))))) #(struct:translate 80 0 #(struct:translate 20 10 #(str"
 #"uct:ellipse 40 20 0 255 \"red\"))))) #(struct:translate 120 0 #(stru"
 #"ct:translate -0.0 34.64101615137755 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pu"
 #"lled-point 0 0 20.000000000000007 -34.64101615137755 0 0)) 255 \"red"
 #"\")))) #(struct:bb 160.0 34.64101615137755 34.64101615137755) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"desenha-lista-formas"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldl"
0 0 24 3 1 #" "
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 11 #"empty-image"
0 0 24 3 2 #" ("
0 0 14 3 5 #"foldl"
0 0 24 3 1 #" "
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 7 #"desenha"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"desenha-lista-formas"
0 0 24 3 1 #" "
0 0 14 3 2 #"L0"
0 0 24 3 2 #") "
0 0 14 3 11 #"empty-image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"desenha-lista-formas"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"desenha-lista-formas"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 2 #")("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #")("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #")("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #")("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"desenha-lista-formas"
0 0 24 3 1 #" "
0 0 14 3 2 #"L3"
0 0 24 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #")("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #")("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #")("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #")("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"desenha-lista-formas"
0 0 24 3 1 #" "
0 0 14 3 2 #"L4"
0 0 24 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #")("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #")("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #")("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 329
(39
 #";;------------------------------------------------------------------"
 #"----------------------------------EXERC\303\215CIO 02A--------------"
 #"--------------------------------------------------------------------"
 #"--------------------------------------------------------------------"
 #"---------------------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 290
(40
 #";; TIPO ALUNO ======================================================"
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"=================="
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 2 #" ("
0 0 14 3 4 #"nome"
0 0 24 3 1 #" "
0 0 14 3 5 #"turma"
0 0 24 3 1 #" "
0 0 14 3 5 #"nota1"
0 0 24 3 1 #" "
0 0 14 3 5 #"nota2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 55
#";; Um elemento aluno do conjunto Aluno \303\251 uma estrutura"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; (make-aluno um-nome uma-turma uma-nota1 uma-nota2), em que:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; um-nome: String, representa o nome do aluno"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; uma-turma: String, representa a turma do aluno"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 76
(41
 #";; uma-nota1: N\303\272mero, representa a nota obtida pelo aluno na "
 #"primeira prova"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(42
 #";; uma-nota2: N\303\272mero, representa a nota obtida pelo aluno na "
 #"segunda prova"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; Exemplos de elementos do conjunto Aluno:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"Jader"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Jader\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #" "
0 0 21 3 3 #"4.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"6.5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"Idemir"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Idemir\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #" "
0 0 21 3 3 #"3.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"5.5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"Julio"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Julio\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #" "
0 0 21 3 3 #"7.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"8.5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"Elmar"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Elmar\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #" "
0 0 21 3 3 #"9.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"8.0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"Estev\303\243o"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Estev\303\243o\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #" "
0 0 21 3 3 #"8.3"
0 0 24 3 1 #" "
0 0 21 3 3 #"9.2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"Andr\303\251"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Andr\303\251\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.9"
0 0 24 3 1 #" "
0 0 21 3 3 #"4.2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"Diego"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Diego\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #" "
0 0 21 3 3 #"7.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"6.8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"Ricardo"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Ricardo\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #" "
0 0 21 3 3 #"9.7"
0 0 24 3 1 #" "
0 0 21 3 3 #"8.7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"Jos\303\251Eduardo"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"Jos\303\251Eduardo\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.1"
0 0 24 3 1 #" "
0 0 21 3 3 #"4.2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"Alvaro"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Alvaro\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #" "
0 0 21 3 3 #"5.3"
0 0 24 3 1 #" "
0 0 21 3 3 #"4.8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"Sandro"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Sandro\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #" "
0 0 21 3 3 #"6.8"
0 0 24 3 1 #" "
0 0 21 3 3 #"9.2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"Lu\303\255s"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Lu\303\255s\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #" "
0 0 21 3 3 #"7.7"
0 0 24 3 1 #" "
0 0 21 3 3 #"8.8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 295
(43
 #";; LISTA DE ALUNOS ================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"======================="
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; Um elemento listadealunos do conjunto ListaDeAlunos pode ser"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; 1. a lista vazia empty"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";; ou"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; 2. (cons aluno lda), em que:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; aluno: Aluno"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; lda: ListaDeAlunos"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; Exemplos de elementos do conjunto ListaDeAlunos:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"lista-alunos-vazia"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"lista-alunos-turmaB"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Andr\303\251"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Elmar"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 8 #"Estev\303\243o"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Idemir"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Jader"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Julio"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"lista-alunos-turmaC"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Alvaro"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Diego"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"Jos\303\251Eduardo"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Lu\303\255s"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"Ricardo"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Sandro"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Jader"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Julio"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Elmar"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 8 #"Estev\303\243o"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Andr\303\251"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Lu\303\255s"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Idemir"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Diego"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"Ricardo"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Alvaro"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Sandro"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"Jos\303\251Eduardo"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Lu\303\255s"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Jader"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Julio"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 10 #"))))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"Ricardo"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Jader"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Elmar"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Andr\303\251"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-4"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Sandro"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Idemir"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Diego"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Alvaro"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-5"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Idemir"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Julio"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Elmar"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Alvaro"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Andr\303\251"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 8 #"Estev\303\243o"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Sandro"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 329
(44
 #";;------------------------------------------------------------------"
 #"----------------------------------EXERC\303\215CIO 02B--------------"
 #"--------------------------------------------------------------------"
 #"--------------------------------------------------------------------"
 #"---------------------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 298
(45
 #";; LISTA-ALUNOS-TURMA =============================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"=========================="
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; lista-alunos-turma: ListaDeAlunos String -> ListaDeAlunos"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 82
(46
 #";; Objetivo: esta fun\303\247\303\243o recebe uma lista de alunos de"
 #" um professor e uma turma,"
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(47
 #";; e retorna uma lista contendo somente os alunos da lista fornecida"
 #" cuja turma"
) 0 0 24 29 1 #"\n"
0 0 17 3 78
(48
 #";; corresponda \303\240 turma que "
 #"foi informada. Caso a fun\303\247\303\243o receba uma lista de"
) 0 0 24 29 1 #"\n"
0 0 17 3 62
(49
 #";; alunos vazia, a fun\303\247\303\243o retorna uma lista de alunos "
 #"vazia."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; Exemplos: (lista-alunos-turma lista-alunos-vazia \"C\") = empty"
0 0 24 29 1 #"\n"
0 0 17 3 125
(50
 #";;           (lista-alunos-turma lista-alunos-1 \"B\") = (cons Jader"
 #"(cons Julio(cons Elmar(cons Estev\303\243o(cons Andr\303\251 empty))"
 #")))"
) 0 0 24 29 1 #"\n"
0 0 17 3 145
(51
 #";;           (lista-alunos-turma lista-alunos-2 \"C\") = (cons Diego"
 #"(cons Ricardo(cons Alvaro(cons Sandro(cons Jos\303\251Eduardo(cons L"
 #"u\303\255s empty)))))) "
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(52
 #";;           (lista-alunos-turma lista-alunos-3 \"C\") = (cons Ricar"
 #"do empty)"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(53
 #";;           (lista-alunos-turma lista-alunos-4 \"B\") = (cons Idemi"
 #"r empty)"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(54
 #";;           (lista-alunos-turma lista-alunos-5 \"C\") = (cons Alvar"
 #"o(cons Sandro empty))"
) 0 0 24 29 1 #"\n"
0 0 17 3 65
#";;           (lista-alunos-turma lista-alunos-turmaC \"B\") = empty"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lista-alunos-turma"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 5 #"turma"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #"("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 11 #"aluno-turma"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")) "
0 0 14 3 5 #"turma"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")("
0 0 14 3 18 #"lista-alunos-turma"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 5 #"turma"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lista-alunos-turma"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 5 #"turma"
0 0 24 3 4 #")]])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lista-alunos-turma"
0 0 24 3 1 #" "
0 0 14 3 18 #"lista-alunos-vazia"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lista-alunos-turma"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Jader"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Julio"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Elmar"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 8 #"Estev\303\243o"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Andr\303\251"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lista-alunos-turma"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-2"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Diego"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"Ricardo"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Alvaro"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Sandro"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"Jos\303\251Eduardo"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"Lu\303\255s"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lista-alunos-turma"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-3"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"Ricardo"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lista-alunos-turma"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-4"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Idemir"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lista-alunos-turma"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-5"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Alvaro"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"Sandro"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lista-alunos-turma"
0 0 24 3 1 #" "
0 0 14 3 19 #"lista-alunos-turmaC"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 329
(55
 #";;------------------------------------------------------------------"
 #"----------------------------------EXERC\303\215CIO 02C--------------"
 #"--------------------------------------------------------------------"
 #"--------------------------------------------------------------------"
 #"---------------------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 288
(56
 #";; TIPO PAR ========================================================"
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"================"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 3 #"par"
0 0 24 3 2 #" ("
0 0 14 3 9 #"nomealuno"
0 0 24 3 1 #" "
0 0 14 3 8 #"conceito"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; Um elemento par do conjunto Par \303\251 uma estrutura"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; (make-par um-nomealuno um-conceito), em que:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; um-nomealuno: String, representa o nome do aluno"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; um-conceito: String, representa o conceito do aluno"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; Exemplos de elementos do conjunto Par:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"JaderD"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-par"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Jader\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"IdemirD"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-par"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Idemir\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"JulioB"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-par"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Julio\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"ElmarB"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-par"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Elmar\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"Estev\303\243oB"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-par"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Estev\303\243o\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"Andr\303\251D"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-par"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Andr\303\251\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"DiegoC"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-par"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Diego\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"RicardoA"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-par"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Ricardo\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"Jos\303\251EduardoD"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-par"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"Jos\303\251Eduardo\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"AlvaroD"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-par"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Alvaro\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"SandroB"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-par"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Sandro\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"Lu\303\255sB"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-par"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Lu\303\255s\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 294
(57
 #";; LISTA DE PARES =================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"======================"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; Um elemento listadepares do conjunto ListaDePares pode ser"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; 1. a lista vazia empty"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";; ou"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; 2. (cons par ldp), em que:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; par: Par"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; ldp: ListaDePares"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; Exemplos de elementos do conjunto ListaDePares:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"lista-pares-vazia"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"lista-pares-1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"JaderD"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"IdemirD"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"SandroB"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"lista-pares-2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"AlvaroD"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"SandroB"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"lista-pares-3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"DiegoC"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"Andr\303\251D"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 9 #"Estev\303\243oB"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 294
(58
 #";; GERA-CONCEITOS =================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"======================"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; gera-conceitos: ListaDeAlunos -> ListaDePares"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 105
(59
 #";; Objetivo: esta fun\303\247\303\243o recebe uma lista de alunos, e"
 #" retorna outra lista contendo os nomes dos alunos"
) 0 0 24 29 1 #"\n"
0 0 17 3 110
(60
 #";; e seus respectivos conceitos, que s\303\243o calculados com base "
 #"nas notas obtidas nas provas por ele realizadas."
) 0 0 24 29 1 #"\n"
0 0 17 3 109
(61
 #";; M\303\251dias entre 9 e 10 (inclusive) geram conceito A, entre 7."
 #"5 (inclusive) e 9 (exclusive) geram conceito B,"
) 0 0 24 29 1 #"\n"
0 0 17 3 98
(62
 #";; entre 6 (inclusive) e 7.5 (exclusive) geram conceito C, nos outro"
 #"s casos o conceito \303\251 D. Caso "
) 0 0 17 3 17 #"a fun\303\247\303\243o receba"
0 0 24 29 1 #"\n"
0 0 17 3 55
#";; uma lista vazia, a fun\303\247\303\243o retorna uma lista vazia."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; Exemplos: (gera-conceitos lista-alunos-vazia) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 99
(63
 #";;           (gera-conceitos lista-alunos-1) = (list JaderD JulioB E"
 #"lmarB Estev\303\243oB Andr\303\251D Lu\303\255sB)"
) 0 0 24 29 1 #"\n"
0 0 17 3 128
(64
 #";;           (gera-conceitos lista-alunos-2) = (list IdemirD DiegoC "
 #"RicardoA AlvaroD SandroB Jos\303\251EduardoD Lu\303\255sB JaderD Jul"
 #"ioB)"
) 0 0 24 29 1 #"\n"
0 0 17 3 84
(65
 #";;           (gera-conceitos lista-alunos-3) = (list RicardoA JaderD"
 #" ElmarB Andr\303\251D)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"gera-conceitos"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-par"
0 0 24 3 2 #" ("
0 0 14 3 10 #"aluno-nome"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 25 #"determina-conceitos-aluno"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #")))("
0 0 14 3 14 #"gera-conceitos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 6 #")))]])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"gera-conceitos"
0 0 24 3 1 #" "
0 0 14 3 18 #"lista-alunos-vazia"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"gera-conceitos"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-1"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"JaderD"
0 0 24 3 1 #" "
0 0 14 3 6 #"JulioB"
0 0 24 3 1 #" "
0 0 14 3 6 #"ElmarB"
0 0 24 3 1 #" "
0 0 14 3 9 #"Estev\303\243oB"
0 0 24 3 1 #" "
0 0 14 3 7 #"Andr\303\251D"
0 0 24 3 1 #" "
0 0 14 3 6 #"Lu\303\255sB"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"gera-conceitos"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-2"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"IdemirD"
0 0 24 3 1 #" "
0 0 14 3 6 #"DiegoC"
0 0 24 3 1 #" "
0 0 14 3 8 #"RicardoA"
0 0 24 3 1 #" "
0 0 14 3 7 #"AlvaroD"
0 0 24 3 1 #" "
0 0 14 3 7 #"SandroB"
0 0 24 3 1 #" "
0 0 14 3 13 #"Jos\303\251EduardoD"
0 0 24 3 1 #" "
0 0 14 3 6 #"Lu\303\255sB"
0 0 24 3 1 #" "
0 0 14 3 6 #"JaderD"
0 0 24 3 1 #" "
0 0 14 3 6 #"JulioB"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"gera-conceitos"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-3"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"RicardoA"
0 0 24 3 1 #" "
0 0 14 3 6 #"JaderD"
0 0 24 3 1 #" "
0 0 14 3 6 #"ElmarB"
0 0 24 3 1 #" "
0 0 14 3 7 #"Andr\303\251D"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 306
(66
 #";; DETERMINA-CONCEITOS-ALUNO  ======================================"
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"=================================="
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; determina-conceitos-aluno: Aluno -> String"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 124
(67
 #";; Objetivo: esta fun\303\247\303\243o auxiliar recebe um aluno, e r"
 #"etorna o conceito final do aluno com base nas notas obtidas nas duas"
) 0 0 24 29 1 #"\n"
0 0 17 3 124
(68
 #";; provas por ele realizadas. M\303\251dias entre 9 e 10 (inclusive)"
 #" geram conceito A, entre 7.5 (inclusive) e 9 (exclusive) geram"
) 0 0 24 29 1 #"\n"
0 0 17 3 104
(69
 #";; conceito B, entre 6 (inclusive) e 7.5 (exclusive) geram conceito "
 #"C, nos outros casos o conceito \303\251 D."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; Exemplos: (determina-conceitos-aluno Ricardo) = \"A\""
0 0 24 29 1 #"\n"
0 0 17 3 55
#";;           (determina-conceitos-aluno Estev\303\243o) = \"B\""
0 0 24 29 1 #"\n"
0 0 17 3 52 #";;           (determina-conceitos-aluno Diego) = \"C\""
0 0 24 29 1 #"\n"
0 0 17 3 53 #";;           (determina-conceitos-aluno Idemir) = \"D\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 25 #"determina-conceitos-aluno"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 13 #"calcula-media"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"D\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 13 #"calcula-media"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 2 #") "
0 0 21 3 3 #"7.5"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 13 #"calcula-media"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 3 #"]])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 25 #"determina-conceitos-aluno"
0 0 24 3 1 #" "
0 0 14 3 7 #"Ricardo"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 25 #"determina-conceitos-aluno"
0 0 24 3 1 #" "
0 0 14 3 8 #"Estev\303\243o"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 25 #"determina-conceitos-aluno"
0 0 24 3 1 #" "
0 0 14 3 5 #"Diego"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 25 #"determina-conceitos-aluno"
0 0 24 3 1 #" "
0 0 14 3 6 #"Idemir"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"D\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 293
(70
 #";; CALCULA-MEDIA ==================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"====================="
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; calcula-media: Aluno -> N\303\272mero"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 83
(71
 #";; Objetivo: esta fun\303\247\303\243o auxiliar recebe um aluno, e r"
 #"etorna a m\303\251dia aritm\303\251tica"
) 0 0 24 29 1 #"\n"
0 0 17 3 63
#";; das notas obtidas pelo aluno na primeira e na segunda prova."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; Exemplos: (calcula-media Jader) = 5.5 "
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;           (calcula-media Estev\303\243o) = 8.75"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;           (calcula-media Jos\303\251Eduardo) = 5.15"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"calcula-media"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aluno-nota1"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 3 #") ("
0 0 14 3 11 #"aluno-nota2"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 2 #"))"
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"calcula-media"
0 0 24 3 1 #" "
0 0 14 3 5 #"Jader"
0 0 24 3 2 #") "
0 0 21 3 3 #"5.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"calcula-media"
0 0 24 3 1 #" "
0 0 14 3 8 #"Estev\303\243o"
0 0 24 3 2 #") "
0 0 21 3 4 #"8.75"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"calcula-media"
0 0 24 3 1 #" "
0 0 14 3 12 #"Jos\303\251Eduardo"
0 0 24 3 2 #") "
0 0 21 3 4 #"5.15"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 329
(72
 #";;------------------------------------------------------------------"
 #"----------------------------------EXERC\303\215CIO 02D--------------"
 #"--------------------------------------------------------------------"
 #"--------------------------------------------------------------------"
 #"---------------------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 292
(73
 #";; ORDENA-TURMA ===================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================="
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 87
(74
 #";; ordena-turma: ListaDeAlunos String (ListaDeAlunos -> ListaDeAluno"
 #"s) -> ListaDeAlunos"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 132
(75
 #";; Objetivo: esta fun\303\247\303\243o recebe uma lista de alunos, u"
 #"ma turma e um crit\303\251rio d"
 #"e ordena\303\247\303\243o que \303\251 repr"
 #"esentado por uma fun\303\247\303\243o."
) 0 0 24 29 1 #"\n"
0 0 17 3 127
(76
 #";; Considerando apenas os alunos da lista que est\303\243o matricula"
 #"dos na turma fornecida, a fun\303\247\303\243o retorna esses alunos "
 #"ordenados"
) 0 0 24 29 1 #"\n"
0 0 17 3 131
(77
 #";; em uma lista segundo o crit\303\251rio de ordena\303\247\303\243o"
 #" estabelecido pela fun\303\247\303\243o fornecida como par\303\242me"
 #"tro. Caso a fun\303\247\303\243o receba uma"
) 0 0 24 29 1 #"\n"
0 0 17 3 71
(78
 #";; lista de alunos vazia, a fun\303\247\303\243o retorna uma lista d"
 #"e alunos vazia."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 68
(79
 #";; Exemplos: (ordena-turma lista-alunos-vazia \"C\" maiornome) = emp"
 #"ty"
) 0 0 24 29 1 #"\n"
0 0 17 3 27 #";;           (ordena-turma "
0 0 17 3 19 #"lista-alunos-turmaB"
0 0 17 3 5 #" \"B\" "
0 0 17 3 11 #"maiornota) "
0 0 17 3 1 #"="
0 0 17 3 22 #" (list Estev\303\243o Elmar "
0 0 17 3 5 #"Julio"
0 0 17 3 21 #" Andr\303\251 Jader Idemir)"
0 0 24 29 1 #"\n"
0 0 17 3 123
(80
 #";;           (ordena-turma lista-alunos-turmaC \"C\" ordemalfabetica"
 #") = (list Alvaro Diego Jos\303\251Eduardo Lu\303\255s Ricardo Sandro"
 #")"
) 0 0 24 29 1 #"\n"
0 0 17 3 99
(81
 #";;           (ordena-turma lista-alunos-1 \"B\" maiornome) = (list E"
 #"stev\303\243o Jader Julio Elmar Andr\303\251)"
) 0 0 24 29 1 #"\n"
0 0 17 3 112
(82
 #";;           (ordena-turma lista-alunos-2 \"C\" maiornota) = (list R"
 #"icardo Lu\303\255s Sandro Diego Jos\303\251Eduardo Alvaro)"
) 0 0 24 29 1 #"\n"
0 0 17 3 90
(83
 #";;           (ordena-turma lista-alunos-3 \"B\" ordemalfabetica) = ("
 #"list Andr\303\251 Elmar Jader)"
) 0 0 24 29 1 #"\n"
0 0 17 3 85
(84
 #";;           (ordena-turma lista-alunos-4 \"C\" maiornota) = (list S"
 #"andro Diego Alvaro)"
) 0 0 24 29 1 #"\n"
0 0 17 3 100
(85
 #";;           (ordena-turma lista-alunos-5 \"B\" maiornome) = (list E"
 #"stev\303\243o Idemir Julio Elmar Andr\303\251)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ordena-turma"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 5 #"turma"
0 0 24 3 1 #" "
0 0 14 3 8 #"criterio"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"criterio"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lista-alunos-turma"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 5 #"turma"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ordena-turma"
0 0 24 3 1 #" "
0 0 14 3 18 #"lista-alunos-vazia"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #" "
0 0 14 3 9 #"maiornome"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ordena-turma"
0 0 24 3 1 #" "
0 0 14 3 19 #"lista-alunos-turmaB"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #" "
0 0 14 3 9 #"maiornota"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"Estev\303\243o"
0 0 24 3 1 #" "
0 0 14 3 5 #"Elmar"
0 0 24 3 1 #" "
0 0 14 3 5 #"Julio"
0 0 24 3 1 #" "
0 0 14 3 6 #"Andr\303\251"
0 0 24 3 1 #" "
0 0 14 3 5 #"Jader"
0 0 24 3 1 #" "
0 0 14 3 6 #"Idemir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ordena-turma"
0 0 24 3 1 #" "
0 0 14 3 19 #"lista-alunos-turmaC"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #" "
0 0 14 3 15 #"ordemalfabetica"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"Alvaro"
0 0 24 3 1 #" "
0 0 14 3 5 #"Diego"
0 0 24 3 1 #" "
0 0 14 3 12 #"Jos\303\251Eduardo"
0 0 24 3 1 #" "
0 0 14 3 5 #"Lu\303\255s"
0 0 24 3 1 #" "
0 0 14 3 7 #"Ricardo"
0 0 24 3 1 #" "
0 0 14 3 6 #"Sandro"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ordena-turma"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #" "
0 0 14 3 9 #"maiornome"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"Estev\303\243o"
0 0 24 3 1 #" "
0 0 14 3 5 #"Jader"
0 0 24 3 1 #" "
0 0 14 3 5 #"Julio"
0 0 24 3 1 #" "
0 0 14 3 5 #"Elmar"
0 0 24 3 1 #" "
0 0 14 3 6 #"Andr\303\251"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ordena-turma"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-2"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #" "
0 0 14 3 9 #"maiornota"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"Ricardo"
0 0 24 3 1 #" "
0 0 14 3 5 #"Lu\303\255s"
0 0 24 3 1 #" "
0 0 14 3 6 #"Sandro"
0 0 24 3 1 #" "
0 0 14 3 5 #"Diego"
0 0 24 3 1 #" "
0 0 14 3 12 #"Jos\303\251Eduardo"
0 0 24 3 1 #" "
0 0 14 3 6 #"Alvaro"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ordena-turma"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-3"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #" "
0 0 14 3 15 #"ordemalfabetica"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"Andr\303\251"
0 0 24 3 1 #" "
0 0 14 3 5 #"Elmar"
0 0 24 3 1 #" "
0 0 14 3 5 #"Jader"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ordena-turma"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-4"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #" "
0 0 14 3 9 #"maiornota"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"Sandro"
0 0 24 3 1 #" "
0 0 14 3 5 #"Diego"
0 0 24 3 1 #" "
0 0 14 3 6 #"Alvaro"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ordena-turma"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-5"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #" "
0 0 14 3 9 #"maiornome"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"Estev\303\243o"
0 0 24 3 1 #" "
0 0 14 3 6 #"Idemir"
0 0 24 3 1 #" "
0 0 14 3 5 #"Julio"
0 0 24 3 1 #" "
0 0 14 3 5 #"Elmar"
0 0 24 3 1 #" "
0 0 14 3 6 #"Andr\303\251"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 295
(86
 #";; ORDEMALFABETICA ================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"======================="
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; ordemalfabetica: ListaDeAlunos -> ListaDeAlunos"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73
(87
 #";; Objetivo: esta fun\303\247\303\243o auxiliar recebe uma lista de "
 #"alunos, e retorna"
) 0 0 24 29 1 #"\n"
0 0 17 3 71
(88
 #";; outra lista contendo todos os alunos da lista que foi fornecida, "
 #"mas"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(89
 #";; posicionados na lista de acordo com a ordem alfab\303\251tica dos"
 #" seus nomes."
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(90
 #";; Caso a fun\303\247\303\243o receba uma lista de alunos vazia, a f"
 #"un\303\247\303\243o retorna uma"
) 0 0 24 29 1 #"\n"
0 0 17 3 25 #";; lista de alunos vazia."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; Exemplos: (ordemalfabetica lista-alunos-vazia) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 94
(91
 #";;           (ordemalfabetica lista-alunos-1) = (list Andr\303\251 E"
 #"lmar Estev\303\243o Jader Julio Lu\303\255s)"
) 0 0 24 29 1 #"\n"
0 0 17 3 120
(92
 #";;           (ordemalfabetica lista-alunos-2) = (list Alvaro Diego I"
 #"demir Jader Jos\303\251Eduardo Julio Lu\303\255s Ricardo Sandro)"
) 0 0 24 29 1 #"\n"
0 0 17 3 81
(93
 #";;           (ordemalfabetica lista-alunos-3) = (list Andr\303\251 E"
 #"lmar Jader Ricardo)"
) 0 0 24 29 1 #"\n"
0 0 17 3 81
(94
 #";;           (ordemalfabetica lista-alunos-4) = (list Alvaro Diego I"
 #"demir Sandro)"
) 0 0 24 29 1 #"\n"
0 0 17 3 103
(95
 #";;           (ordemalfabetica lis"
 #"ta-alunos-5) = (list Alvaro Andr\303\251 Elmar Estev\303\243o Idemir"
 #" Julio Sandro)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"ordemalfabetica"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"insere-ordemalfabetica"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 9 #"string<=?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"aluno-nome"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 3 #") ("
0 0 14 3 10 #"aluno-nome"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"aluno-nome"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 3 #") ("
0 0 14 3 10 #"aluno-nome"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")("
0 0 14 3 22 #"insere-ordemalfabetica"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"ordena-ordemalfabetica"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 22 #"insere-ordemalfabetica"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 14 3 22 #"ordena-ordemalfabetica"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 7 #")))])) "
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"     ) ("
0 0 14 3 22 #"ordena-ordemalfabetica"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"ordemalfabetica"
0 0 24 3 1 #" "
0 0 14 3 18 #"lista-alunos-vazia"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"ordemalfabetica"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"Andr\303\251"
0 0 24 3 1 #" "
0 0 14 3 5 #"Elmar"
0 0 24 3 1 #" "
0 0 14 3 8 #"Estev\303\243o"
0 0 24 3 1 #" "
0 0 14 3 5 #"Jader"
0 0 24 3 1 #" "
0 0 14 3 5 #"Julio"
0 0 24 3 1 #" "
0 0 14 3 5 #"Lu\303\255s"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"ordemalfabetica"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"Alvaro"
0 0 24 3 1 #" "
0 0 14 3 5 #"Diego"
0 0 24 3 1 #" "
0 0 14 3 6 #"Idemir"
0 0 24 3 1 #" "
0 0 14 3 5 #"Jader"
0 0 24 3 1 #" "
0 0 14 3 12 #"Jos\303\251Eduardo"
0 0 24 3 1 #" "
0 0 14 3 5 #"Julio"
0 0 24 3 1 #" "
0 0 14 3 5 #"Lu\303\255s"
0 0 24 3 1 #" "
0 0 14 3 7 #"Ricardo"
0 0 24 3 1 #" "
0 0 14 3 6 #"Sandro"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"ordemalfabetica"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"Andr\303\251"
0 0 24 3 1 #" "
0 0 14 3 5 #"Elmar"
0 0 24 3 1 #" "
0 0 14 3 5 #"Jader"
0 0 24 3 1 #" "
0 0 14 3 7 #"Ricardo"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"ordemalfabetica"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"Alvaro"
0 0 24 3 1 #" "
0 0 14 3 5 #"Diego"
0 0 24 3 1 #" "
0 0 14 3 6 #"Idemir"
0 0 24 3 1 #" "
0 0 14 3 6 #"Sandro"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"ordemalfabetica"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"Alvaro"
0 0 24 3 1 #" "
0 0 14 3 6 #"Andr\303\251"
0 0 24 3 1 #" "
0 0 14 3 5 #"Elmar"
0 0 24 3 1 #" "
0 0 14 3 8 #"Estev\303\243o"
0 0 24 3 1 #" "
0 0 14 3 6 #"Idemir"
0 0 24 3 1 #" "
0 0 14 3 5 #"Julio"
0 0 24 3 1 #" "
0 0 14 3 6 #"Sandro"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 223
(96
 #";; ORDENA-ORDEMALFABETICA =========================================="
 #"===================================================================="
 #"===================================================================="
 #"==================="
) 0 0 17 3 315
(97
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"==========================================="
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; ordena-ordemalfabetica: ListaDeAlunos -> ListaDeAlunos"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 83
(98
 #";; Objetivo: esta fun\303\247\303\243o auxiliar recebe uma lista de "
 #"alunos, e retorna uma lista"
) 0 0 24 29 1 #"\n"
0 0 17 3 81
(99
 #";; contendo todos os aluno da da lista fornecida, mas organizados se"
 #"gundo a ordem"
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(100
 #";; alfab\303\251tica. Caso a fun\303\247\303\243o receba uma lista v"
 #"azia, a fun\303\247\303\243o retorna "
) 0 0 17 3 3 #"uma"
0 0 17 3 1 #" "
0 0 17 3 12 #"lista vazia."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; Exemplos: (ordena-ordemalfabetica lista-alunos-vazia) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 143
(101
 #";;           (ordena-ordemalfabetica lista-alunos-1) = (ordena-ordem"
 #"alfabetica lista-alunos-1) = (list Andr\303\251 Elmar Estev\303\243o"
 #" Jader Julio Lu\303\255s)"
) 0 0 24 29 1 #"\n"
0 0 17 3 169
(102
 #";;           (ordena-ordemalfabetica lista-alunos-2) = (ordena-ordem"
 #"alfabetica lista-alunos-2) = (list Alvaro Diego Idemir Jader Jos\303"
 #"\251Eduardo Julio Lu\303\255s Ricardo Sandro)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 487
(103
 #";; INSERE-ORDEMALFABETICA =========================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"==========="
) 0 0 17 3 51 #"==================================================="
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; insere-ordemalfabetica: Aluno ListaDeAlunos -> ListaDeAlunos"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 84
(104
 #";; Objetivo: esta fun\303\247\303\243o auxiliar recebe uma lista de "
 #"alunos e um aluno, e retorna"
) 0 0 24 29 1 #"\n"
0 0 17 3 84
(105
 #";; uma nova lista contendo todos os alunos da lista que foi fornecid"
 #"a e mais o aluno"
) 0 0 24 29 1 #"\n"
0 0 17 3 81
(106
 #";; que foi fornecido, que estar\303\241 posicionado de forma a deixa"
 #"r a lista de alunos"
) 0 0 24 29 1 #"\n"
0 0 17 3 85
(107
 #";; organizada segundo a ordem alfab\303\251tica, ou seja, o aluno qu"
 #"e foi fornecido estar\303\241"
) 0 0 24 29 1 #"\n"
0 0 17 3 88
(108
 #";; na posi\303\247\303\243o imediatam"
 #"ente anterior \303\240 posi\303\247\303\243o do primeiro aluno da li"
 #"sta cujo nome"
) 0 0 24 29 1 #"\n"
0 0 17 3 93
(109
 #";; seja superior ou igual ao nome do aluno que foi fornecido, segund"
 #"o a ordem lexicogr\303\241fica."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 77
(110
 #";; Exemplos: (insere-ordemalfabetica Jader lista-alunos-vazia) = (li"
 #"st Jader)"
) 0 0 24 29 1 #"\n"
0 0 17 3 115
(111
 #";;           (insere-ordemalfabetica Idemir lista-alunos-1) = (list "
 #"Idemir Jader Julio Elmar Estev\303\243o Andr\303\251 Lu\303\255s)"
) 0 0 24 29 1 #"\n"
0 0 17 3 141
(112
 #";;           (insere-ordemalfabetica Andr\303\251 lista-alunos-2) = "
 #"(list Andr\303\251 Idemir Diego Ricardo Alvaro Sandro Jos\303\251Edu"
 #"ardo Lu\303\255s Jader Julio)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 289
(113
 #";; MAIORNOTA ======================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"================="
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; maiornota: ListaDeAlunos -> ListaDeAlunos"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73 87 0 0 24 29 1 #"\n"
0 0 17 3 71 88 0 0 24 29 1 #"\n"
0 0 17 3 74
(114
 #";; posicionados na lista de acordo com a m\303\251dia final obtida p"
 #"or eles, que"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(115
 #";; \303\251 calculada considerando as notas obtidas nas duas provas "
 #"realizadas"
) 0 0 24 29 1 #"\n"
0 0 17 3 76
(116
 #";; (em ordem decrescente). Caso a fun\303\247\303\243o receba uma li"
 #"sta de alunos vazia,"
) 0 0 24 29 1 #"\n"
0 0 17 3 4 #";; a"
0 0 17 3 10 #" fun\303\247\303\243o "
0 0 17 3 7 #"retorna"
0 0 17 3 27 #" uma lista de alunos vazia."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; Exemplos: (maiornota lista-alunos-vazia) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 88
(117
 #";;           (maiornota lista-alunos-1) = (list Estev\303\243o Elmar"
 #" Lu\303\255s Julio Andr\303\251 Jader)"
) 0 0 24 29 1 #"\n"
0 0 17 3 114
(118
 #";;           (maiornota lista-alunos-2) = (list Ricardo Lu\303\255s "
 #"Julio Sandro Diego Jader Jos\303\251Eduardo Alvaro Idemir)"
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(119
 #";;           (maiornota lista-alu"
 #"nos-3) = (list Ricardo Elmar Andr\303\251 Jader)"
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(120
 #";;           (maiornota lista-alunos-4) = (list Sandro Diego Alvaro "
 #"Idemir)"
) 0 0 24 29 1 #"\n"
0 0 17 3 97
(121
 #";;           (maiornota lista-alunos-5) = (list Estev\303\243o Elmar"
 #" Sandro Julio Andr\303\251 Alvaro Idemir)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"maiornota"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"insere-maiornota"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 13 #"calcula-media"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 3 #") ("
0 0 14 3 13 #"calcula-media"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 13 #"calcula-media"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 3 #") ("
0 0 14 3 13 #"calcula-media"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")("
0 0 14 3 16 #"insere-maiornota"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"ordena-maiornota"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 16 #"insere-maiornota"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 14 3 16 #"ordena-maiornota"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 7 #")))])) "
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"     ) ("
0 0 14 3 16 #"ordena-maiornota"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"maiornota"
0 0 24 3 1 #" "
0 0 14 3 18 #"lista-alunos-vazia"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"maiornota"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"Estev\303\243o"
0 0 24 3 1 #" "
0 0 14 3 5 #"Elmar"
0 0 24 3 1 #" "
0 0 14 3 5 #"Lu\303\255s"
0 0 24 3 1 #" "
0 0 14 3 5 #"Julio"
0 0 24 3 1 #" "
0 0 14 3 6 #"Andr\303\251"
0 0 24 3 1 #" "
0 0 14 3 5 #"Jader"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"maiornota"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"Ricardo"
0 0 24 3 1 #" "
0 0 14 3 5 #"Lu\303\255s"
0 0 24 3 1 #" "
0 0 14 3 5 #"Julio"
0 0 24 3 1 #" "
0 0 14 3 6 #"Sandro"
0 0 24 3 1 #" "
0 0 14 3 5 #"Diego"
0 0 24 3 1 #" "
0 0 14 3 5 #"Jader"
0 0 24 3 1 #" "
0 0 14 3 12 #"Jos\303\251Eduardo"
0 0 24 3 1 #" "
0 0 14 3 6 #"Alvaro"
0 0 24 3 1 #" "
0 0 14 3 6 #"Idemir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"maiornota"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"Ricardo"
0 0 24 3 1 #" "
0 0 14 3 5 #"Elmar"
0 0 24 3 1 #" "
0 0 14 3 6 #"Andr\303\251"
0 0 24 3 1 #" "
0 0 14 3 5 #"Jader"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"maiornota"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"Sandro"
0 0 24 3 1 #" "
0 0 14 3 5 #"Diego"
0 0 24 3 1 #" "
0 0 14 3 6 #"Alvaro"
0 0 24 3 1 #" "
0 0 14 3 6 #"Idemir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"maiornota"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"Estev\303\243o"
0 0 24 3 1 #" "
0 0 14 3 5 #"Elmar"
0 0 24 3 1 #" "
0 0 14 3 6 #"Sandro"
0 0 24 3 1 #" "
0 0 14 3 5 #"Julio"
0 0 24 3 1 #" "
0 0 14 3 6 #"Andr\303\251"
0 0 24 3 1 #" "
0 0 14 3 6 #"Alvaro"
0 0 24 3 1 #" "
0 0 14 3 6 #"Idemir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 217
(122
 #";; ORDENA-MAIORNOTA ================================================"
 #"===================================================================="
 #"===================================================================="
 #"============="
) 0 0 17 3 315 97 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; ordena-maiornota: ListaDeAlunos -> ListaDeAlunos"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 83 98 0 0 24 29 1 #"\n"
0 0 17 3 81
(123
 #";; contendo todos os aluno da da lista fornecida, mas organizados de"
 #" acordo com a"
) 0 0 24 29 1 #"\n"
0 0 17 3 81
(124
 #";; sua nota final, que \303\251 calculada considerando as notas obti"
 #"das nas duas provas"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(125
 #";; realizadas (em ordem decrescente). Caso a fun\303\247\303\243o re"
 #"ceba uma lista de alunos vazia,"
) 0 0 24 29 1 #"\n"
0 0 17 3 38 #";; a fun\303\247\303\243o retorna uma lista vazia."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; Exemplos: (ordena-maiornota lista-alunos-vazia) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 95
(126
 #";;           (ordena-maiornota lista-alunos-1) = (list Estev\303\243"
 #"o Elmar Lu\303\255s Julio Andr\303\251 Jader)"
) 0 0 24 29 1 #"\n"
0 0 17 3 121
(127
 #";;           (ordena-maiornota li"
 #"sta-alunos-2) = (list Ricardo Lu\303\255s Julio Sandro Diego Jader J"
 #"os\303\251Eduardo Alvaro Idemir)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 481
(128
 #";; INSERE-MAIORNOTA ================================================"
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"====="
) 0 0 17 3 51 #"==================================================="
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; insere-maiornota: Aluno ListaDeAlunos -> ListaDeAlunos"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 84 104 0 0 24 29 1 #"\n"
0 0 17 3 84 105 0 0 24 29 1 #"\n"
0 0 17 3 81 106 0 0 24 29 1 #"\n"
0 0 17 3 81
(129
 #";; organizada segundo a nota final de cada aluno (de forma decrescen"
 #"te), ou seja,"
) 0 0 24 29 1 #"\n"
0 0 17 3 85
(130
 #";; o aluno que foi fornecido estar\303\241 na posi\303\247\303\243o "
 #"imediatamente anterior \303\240 posi\303\247\303\243o"
) 0 0 24 29 1 #"\n"
0 0 17 3 80
(131
 #";; do primeiro aluno da lista que possuir uma nota final menor ou ig"
 #"ual do que a"
) 0 0 24 29 1 #"\n"
0 0 17 3 7 #";; nota"
0 0 17 3 9 #" do aluno"
0 0 17 3 1 #" "
0 0 17 3 3 #"que"
0 0 17 3 1 #" "
0 0 17 3 3 #"foi"
0 0 17 3 11 #" fornecido."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 71
(132
 #";; Exemplos: (insere-maiornota Jader lista-alunos-vazia) = (list Jad"
 #"er)"
) 0 0 24 29 1 #"\n"
0 0 17 3 111
(133
 #";;           (insere-maiornota Ricardo lista-alunos-1) = (list Ricar"
 #"do Jader Julio Elmar Estev\303\243o Andr\303\251 Lu\303\255s)"
) 0 0 24 29 1 #"\n"
0 0 17 3 96
(134
 #";;           (insere-maiornota Idemir lista-alunos-3) = (list Ricard"
 #"o Jader Elmar Andr\303\251 Idemir)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 289
(135
 #";; MAIORNOME ======================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"================="
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; maiornome: ListaDeAlunos -> ListaDeAlunos"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73 87 0 0 24 29 1 #"\n"
0 0 17 3 71 88 0 0 24 29 1 #"\n"
0 0 17 3 71
(136
 #";; posicionados na lista de acordo com a quantidade de letras que o "
 #"seu"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(137
 #";; nome possui (em ordem decrescente). Caso a fun\303\247\303\243o r"
 #"eceba uma lista de"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #";; alunos vazia, a"
0 0 17 3 1 #" "
0 0 17 3 8 #"fun\303\247\303\243o"
0 0 17 3 1 #" "
0 0 17 3 7 #"retorna"
0 0 17 3 27 #" uma lista de alunos vazia."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; Exemplos: (maiornome lista-alunos-vazia) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 88
(138
 #";;           (maiornome lista-alunos-1) = (list Estev\303\243o Jader"
 #" Julio Elmar Andr\303\251 Lu\303\255s)"
) 0 0 24 29 1 #"\n"
0 0 17 3 114
(139
 #";;           (maiornome lista-alunos-2) = (list Jos\303\251Eduardo R"
 #"icardo Idemir Alvaro Sandro Diego Jader Julio Lu\303\255s)"
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(140
 #";;           (maiornome lista-alunos-3) = (list Ricardo Jader Elmar "
 #"Andr\303\251)"
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(141
 #";;           (maiornome lista-alunos-4) = (list Sandro Idemir Alvaro"
 #" Diego)"
) 0 0 24 29 1 #"\n"
0 0 17 3 97
(142
 #";;           (maiornome lista-alunos-5) = (list Estev\303\243o Idemi"
 #"r Alvaro Sandro Julio Elmar Andr\303\251)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"maiornome"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"insere-maiornome"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 2 #" ("
0 0 14 3 10 #"aluno-nome"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #"("
0 0 14 3 10 #"aluno-nome"
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 6 #")))) ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 2 #" ("
0 0 14 3 10 #"aluno-nome"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #"("
0 0 14 3 10 #"aluno-nome"
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 6 #")))) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 14 3 16 #"insere-maiornome"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"ordena-maiornome"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 16 #"insere-maiornome"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 14 3 16 #"ordena-maiornome"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 7 #")))])) "
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"     ) ("
0 0 14 3 16 #"ordena-maiornome"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"maiornome"
0 0 24 3 1 #" "
0 0 14 3 18 #"lista-alunos-vazia"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"maiornome"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"Estev\303\243o"
0 0 24 3 1 #" "
0 0 14 3 5 #"Jader"
0 0 24 3 1 #" "
0 0 14 3 5 #"Julio"
0 0 24 3 1 #" "
0 0 14 3 5 #"Elmar"
0 0 24 3 1 #" "
0 0 14 3 6 #"Andr\303\251"
0 0 24 3 1 #" "
0 0 14 3 5 #"Lu\303\255s"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"maiornome"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 12 #"Jos\303\251Eduardo"
0 0 24 3 1 #" "
0 0 14 3 7 #"Ricardo"
0 0 24 3 1 #" "
0 0 14 3 6 #"Idemir"
0 0 24 3 1 #" "
0 0 14 3 6 #"Alvaro"
0 0 24 3 1 #" "
0 0 14 3 6 #"Sandro"
0 0 24 3 1 #" "
0 0 14 3 5 #"Diego"
0 0 24 3 1 #" "
0 0 14 3 5 #"Jader"
0 0 24 3 1 #" "
0 0 14 3 5 #"Julio"
0 0 24 3 1 #" "
0 0 14 3 5 #"Lu\303\255s"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"maiornome"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"Ricardo"
0 0 24 3 1 #" "
0 0 14 3 5 #"Jader"
0 0 24 3 1 #" "
0 0 14 3 5 #"Elmar"
0 0 24 3 1 #" "
0 0 14 3 6 #"Andr\303\251"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"maiornome"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"Sandro"
0 0 24 3 1 #" "
0 0 14 3 6 #"Idemir"
0 0 24 3 1 #" "
0 0 14 3 6 #"Alvaro"
0 0 24 3 1 #" "
0 0 14 3 5 #"Diego"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"maiornome"
0 0 24 3 1 #" "
0 0 14 3 14 #"lista-alunos-5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"Estev\303\243o"
0 0 24 3 1 #" "
0 0 14 3 6 #"Idemir"
0 0 24 3 1 #" "
0 0 14 3 6 #"Alvaro"
0 0 24 3 1 #" "
0 0 14 3 6 #"Sandro"
0 0 24 3 1 #" "
0 0 14 3 5 #"Julio"
0 0 24 3 1 #" "
0 0 14 3 5 #"Elmar"
0 0 24 3 1 #" "
0 0 14 3 6 #"Andr\303\251"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 217
(143
 #";; ORDENA-MAIORNOME ================================================"
 #"===================================================================="
 #"===================================================================="
 #"============="
) 0 0 17 3 315 97 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; ordena-maiornome: ListaDeAlunos -> ListaDeAlunos"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 83 98 0 0 24 29 1 #"\n"
0 0 17 3 81
(144
 #";; contendo todos os aluno da da lista fornecida, mas organizados de"
 #" acordo com o"
) 0 0 24 29 1 #"\n"
0 0 17 3 82
(145
 #";; tamanho do seu nome (em ord"
 #"em decrescente). Caso a fun\303\247\303\243o receba uma lista de"
) 0 0 24 29 1 #"\n"
0 0 17 3 9 #";; alunos"
0 0 17 3 1 #" "
0 0 17 3 8 #"vazia, a"
0 0 17 3 1 #" "
0 0 17 3 8 #"fun\303\247\303\243o"
0 0 17 3 1 #" "
0 0 17 3 7 #"retorna"
0 0 17 3 1 #" "
0 0 17 3 3 #"uma"
0 0 17 3 1 #" "
0 0 17 3 5 #"lista"
0 0 17 3 7 #" vazia."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; Exemplos: (ordena-maiornome lista-alunos-vazia) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 95
(146
 #";;           (ordena-maiornome lista-alunos-1) = (list Estev\303\243"
 #"o Jader Julio Elmar Andr\303\251 Lu\303\255s)"
) 0 0 24 29 1 #"\n"
0 0 17 3 121
(147
 #";;           (ordena-maiornome lista-alunos-2) = (list Jos\303\251Ed"
 #"uardo Ricardo Idemir Alvaro Sandro Diego Jader Julio Lu\303\255s)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 481
(148
 #";; INSERE-MAIORNOME ================================================"
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"===================================================================="
 #"====="
) 0 0 17 3 51 #"==================================================="
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; insere-maiornome: Aluno ListaDeAlunos -> ListaDeAlunos"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 84 104 0 0 24 29 1 #"\n"
0 0 17 3 84 105 0 0 24 29 1 #"\n"
0 0 17 3 81 106 0 0 24 29 1 #"\n"
0 0 17 3 86
(149
 #";; organizada segundo o tamanho do nome de cada aluno (de forma decr"
 #"escente), ou seja,"
) 0 0 24 29 1 #"\n"
0 0 17 3 88
(150
 #";; o aluno que foi fornecido estar\303\241 na posi\303\247\303\243o "
 #"imediatamente anterior \303\240 posi\303\247\303\243o do"
) 0 0 24 29 1 #"\n"
0 0 17 3 89
(151
 #";; primeiro aluno da lista que possuir um nome de tamanho menor ou i"
 #"gual ao nome do aluno"
) 0 0 24 29 1 #"\n"
0 0 17 3 6 #";; que"
0 0 17 3 15 #" foi fornecido."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 71
(152
 #";; Exemplos: (insere-maiornome Jader lista-alunos-vazia) = (list Jad"
 #"er)"
) 0 0 24 29 1 #"\n"
0 0 17 3 111
(153
 #";;           (insere-maiornome Ricardo lista-alunos-1) = (list Ricar"
 #"do Jader Julio Elmar Estev\303\243o Andr\303\251 Lu\303\255s)"
) 0 0 24 29 1 #"\n"
0 0 17 3 103
(154
 #";;           (insere-maiornome Julio lista-alunos-3) = (list Ricardo"
 #" Julio Jader Elmar Andr\303\251 Idemir)  "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0           0
